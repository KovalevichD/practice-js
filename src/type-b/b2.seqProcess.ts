/*
 * Задача b2: Есть массив url, есть функция fetch, которая возвращает промис
 * Необходимо последовательно обработать запросы,
 * то есть начинать обрабатывать следующий только после выполнения предыдущего
 * Когда все запросы обработаны, функция возвращает массив с резульататами.
 * Напишите тесты.
 *
 *
 *Не знаю как решить задачу. Не могу понять работу fetch(url). То есть мне непонятны URL запросы, что они 
 должны вернуть, что это за значения и тд. Видимо мне нужно разобраться зачем вообще нужно отправлять 
 запросы, что возвращает fetch(url). Пытался нагуглить, но не нашёл прям рабочих примеров(чтобы наглядно
 была показана работа с url, и можно это было бы повторить у себя и поиграться). Буду дальше пробовать
 гуглить, понять эти запросы.
 пока что я вроде как сделал задачу с массивом чисел и без fetch. То есть якобы сделал 2ю половину задачи.
 Я в правильном направлении думаю?

 
const arr = [1, 2, 3, 4, 5];

async function f() {
	const arrResult = [];

	for (let item of arr) {
		let promise = new Promise(function(resolve) {
			setTimeout(() => resolve(item * 2), 1000);
		});
		let result = await promise;

		arrResult.push(result);
	}

	alert(arrResult);
}
f();
 */
